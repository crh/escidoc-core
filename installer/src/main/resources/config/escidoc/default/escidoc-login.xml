<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ CDDL HEADER START
  ~
  ~ The contents of this file are subject to the terms of the Common Development and Distribution License, Version 1.0
  ~ only (the "License"). You may not use this file except in compliance with the License.
  ~
  ~ You can obtain a copy of the license at license/ESCIDOC.LICENSE or http://www.escidoc.de/license. See the License
  ~ for the specific language governing permissions and limitations under the License.
  ~
  ~ When distributing Covered Code, include this CDDL HEADER in each file and include the License file at
  ~ license/ESCIDOC.LICENSE. If applicable, add the following below this CDDL HEADER, with the fields enclosed by
  ~ brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
  ~
  ~ CDDL HEADER END
  ~
  ~ Copyright 2006-2011 Fachinformationszentrum Karlsruhe Gesellschaft fuer wissenschaftlich-technische Information mbH
  ~ and Max-Planck-Gesellschaft zur Foerderung der Wissenschaft e.V. All rights reserved. Use is subject to license
  ~ terms.
  -->

<!-- 
        eSciDoc Login Configuration
        ===========================
        
        This file defines the login mechanism(s) that shall be used for the
        login of eSciDoc users.
        The eSciDoc login is based on spring security. For detailed information
        about spring security, see 
        http://static.springframework.org/spring-security/site/index.html.

        This file has to be placed in the classpath, e.g. in jboss it should be
        placed in the server's "conf" folder (<jboss_dir>/server/<server name>/conf/)

		This configuration contains different filterChains with different names for the different login-mechanisms.
		The different chains are reachable via the urls defined in filter-chain pattern:
		The chain-names are:
		-springSecurityDatabaseFilterChain (Login via eSciDoc internal Database, url:/aa/login/database)
		-springSecurityLdapFilterChain (Login via an LDAP-Server, url:/aa/login/ldap)
		-springSecurityShibbolethFilterChain (Login via Shibboleth, url:/aa/login/shibboleth)
		-springSecurityOpenidFilterChain (Login via OpenID, url:/aa/login/openid)
		
		Each chain defines a set of filters to perform the login.
		If an login-mechanism should be excluded, comment in the chain with filters=disabledAuthenticationProcessingFilter
		and comment out the other one.
 -->
<beans
xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:aop="http://www.springframework.org/schema/aop"
      xmlns:security="http://www.springframework.org/schema/security"
      xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"

  default-autowire="no"
  default-lazy-init="false"
>
 
    <!-- DATABASE FILTER CHAIN #######################################################################################################-->
	<!-- 
	Filter-Chain for database-Login.
	To disable, comment in filter-chain with filters=disabledAuthenticationProcessingFilter.
	Eventually adapt database url, username and password
	 -->
    <bean id="springSecurityDatabaseFilterChain"
        class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map path-type="regex">
        	<!-- security:filter-chain filters="disabledAuthenticationProcessingFilter" pattern="/aa/login/database$|/aa/login/database[^/].*$|/aa/database/j_spring_security_check|/aa/database/spring_security_check"/ -->
            <security:filter-chain pattern="/aa/login/database$|/aa/login/database[^/].*$|/aa/database/j_spring_security_check|/aa/database/spring_security_check" 
                       filters="httpSessionContextIntegrationFilter,
                                databaseLogoutFilter,
                                databaseAuthenticationProcessingFilter,
                                securityContextHolderAwareRequestFilter,
                                databaseExceptionTranslationFilter,
                                databaseFilterSecurityInterceptor" />
        </security:filter-chain-map>
    </bean>
    
    <bean id="eSciDocDatabaseAuthenticationManager"
        class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>
                <ref local="databaseAuthenticationProvider"/>
            </list>
        </property>
    </bean>
    
    <bean id="databaseAuthenticationProvider"
        class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="dbUserService"/>
    </bean>
    
    <bean id="dbUserService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">  
        <property name="dataSource" ref="escidoc-core.DataSource"/>  
        <property name="usersByUsernameQuery">  
            <value>  
                select loginname, password, 'true' as active from aa.user_account where loginname = ?  
            </value>  
        </property>  
        <property name="authoritiesByUsernameQuery">  
            <value>  
                 select loginname, 'ROLE_ESCIDOC_USER' from aa.user_account where loginname = ?
            </value>  
        </property>  
     </bean>  

    <bean id="escidoc-core.DataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/escidoc-core"/>
        <property name="username" value="escidoc"/>
        <property name="password" value="escidoc"/>
    </bean>

    <bean id="databaseAuthenticationProcessingFilter"  
        class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">  
        <property name="authenticationManager" ref="eSciDocDatabaseAuthenticationManager"/>  
 		<property name="authenticationFailureHandler" ref="databaseFailureHandler"/>
 		<property name="authenticationSuccessHandler" ref="databaseSuccessHandler"/>
        <property name="filterProcessesUrl" value="/aa/database/j_spring_security_check"/>  
    </bean>         

	<bean id="databaseSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
 		<property name="defaultTargetUrl" value="/aa/login/missing-target.html" />
	</bean>

	<bean id="databaseFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
 		<property name="defaultFailureUrl" value="/aa/login/database/login-repeated.html" />
	</bean>
	
    <bean id="databaseExceptionTranslationFilter"  
        class="org.springframework.security.web.access.ExceptionTranslationFilter">  
        <property name="authenticationEntryPoint" ref="databaseAuthenticationProcessingFilterEntryPoint" />  
        <property name="accessDeniedHandler">  
            <bean  
                class="org.springframework.security.web.access.AccessDeniedHandlerImpl">  
                <property name="errorPage" value="/aa/login/database/login-repeated.html" />  
            </bean>  
        </property>  
    </bean>  

    <bean id="databaseAuthenticationProcessingFilterEntryPoint" 
            class="de.escidoc.core.aa.springsecurity.EscidocAuthenticationProcessingFilterEntryPoint">
      <property name="loginFormUrl" value="/aa/login/database/login.html"/>
    </bean>
    
    <bean id="databaseFilterSecurityInterceptor"  class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="eSciDocDatabaseAuthenticationManager" />
        <property name="accessDecisionManager" ref="accessDecisionManager" />
        <property name="securityMetadataSource">
            <security:filter-invocation-definition-source path-type="regex">
                <security:intercept-url pattern="/aa/login/database$|/aa/login/database[^/].*$|/aa/database/j_spring_security_check|/aa/database/spring_security_check" access="IS_AUTHENTICATED_FULLY"/>
            </security:filter-invocation-definition-source>
        </property>
    </bean>

    <bean id="databaseLogoutFilter"  
        class="org.springframework.security.web.authentication.logout.LogoutFilter">  
        <constructor-arg value="/aa/login/database/login.html" />  
        <!-- URL redirected to after logout -->  
        <constructor-arg>  
            <list>                      
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />  
            </list>  
        </constructor-arg>  
    </bean>  

    <!-- END DATABASE FILTER CHAIN #######################################################################################################-->
    <!-- LDAP FILTER CHAIN #######################################################################################################-->
	<!-- 
	Filter-Chain for LDAP-Login.
	To disable, comment in filter-chain with filters=disabledAuthenticationProcessingFilter.
	To enable, comment out filter-chain with filters=disabledAuthenticationProcessingFilter and comment in the other one.
	Adapt constructor-arg of bean with name=contextSource to your LDAP-URL.
    In bean=userSearch, {0} is a placeholder for the login name of the
    user. 
    In DefaultLdapAuthoritiesPopulator, adapt constructor-arg 2 and properties:
    in property groupSearchFilter {0} is a placeholder for dn and {1} is a placeholder for uid
	 -->
    <bean id="springSecurityLdapFilterChain"
        class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map path-type="regex">
        	<security:filter-chain filters="disabledAuthenticationProcessingFilter" pattern="/aa/login/ldap$|/aa/login/ldap[^/].*$|/aa/ldap/j_spring_security_check|/aa/ldap/spring_security_check"/>
            <!-- security:filter-chain pattern="/aa/login/ldap$|/aa/login/ldap[^/].*$|/aa/ldap/j_spring_security_check|/aa/ldap/spring_security_check" 
                       filters="httpSessionContextIntegrationFilter,
                                ldapLogoutFilter,
                                ldapAuthenticationProcessingFilter,
                                securityContextHolderAwareRequestFilter,
                                ldapExceptionTranslationFilter,
                                ldapFilterSecurityInterceptor" / -->
        </security:filter-chain-map>

    </bean>
    
    <bean id="ldapAuthenticationProcessingFilter"  
        class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">  
        <property name="authenticationManager" ref="eSciDocLdapAuthenticationManager"/>  
 		<property name="authenticationFailureHandler" ref="ldapFailureHandler"/>
 		<property name="authenticationSuccessHandler" ref="ldapSuccessHandler"/>
        <property name="filterProcessesUrl" value="/aa/ldap/j_spring_security_check"/>  
    </bean>         

	<bean id="ldapSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
 		<property name="defaultTargetUrl" value="/aa/login/missing-target.html" />
	</bean>

	<bean id="ldapFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
 		<property name="defaultFailureUrl" value="/aa/login/ldap/login-repeated.html" />
	</bean>
	
    <bean id="eSciDocLdapAuthenticationManager"
        class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>
                <ref local="ldapAuthenticationProvider"/>
            </list>
        </property>
    </bean>
    
    <bean id="ldapAuthenticationProvider"
        class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
        <constructor-arg>
            <bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
                <constructor-arg ref="contextSource"/>
                <property name="userSearch" ref="userSearch" />
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
                <constructor-arg ref="contextSource"/>
                <constructor-arg value="ou=group"/>
                <property name="groupRoleAttribute" value="cn"/>
                <property name="groupSearchFilter" value="(member={0})"/>
                <property name="rolePrefix" value=""/>
                <property name="convertToUpperCase" value="false"/>
            </bean>
        </constructor-arg>
        <property name="userDetailsContextMapper">
            <bean class="de.escidoc.core.aa.ldap.EscidocLdapContextMapper"/>
        </property>
    </bean>

    <bean id="contextSource"
        class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <constructor-arg value="ldap://escidev5.fiz-karlsruhe.de/dc=fiz-karlsruhe,dc=de"/>
    </bean>

    <bean id="userSearch"
        class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
        <constructor-arg index="0" value="ou=people"/>
        <constructor-arg index="1" value="(uid={0})"/>
        <constructor-arg index="2" ref="contextSource" />
    </bean>

    <bean id="ldapExceptionTranslationFilter"  
        class="org.springframework.security.web.access.ExceptionTranslationFilter">  
        <property name="authenticationEntryPoint" ref="ldapAuthenticationProcessingFilterEntryPoint" />  
        <property name="accessDeniedHandler">  
            <bean  
                class="org.springframework.security.web.access.AccessDeniedHandlerImpl">  
                <property name="errorPage" value="/aa/login/ldap/login-repeated.html" />  
            </bean>  
        </property>  
    </bean>  

    <bean id="ldapAuthenticationProcessingFilterEntryPoint" 
            class="de.escidoc.core.aa.springsecurity.EscidocAuthenticationProcessingFilterEntryPoint">
      <property name="loginFormUrl" value="/aa/login/ldap/login.html"/>
    </bean>
    
    <bean id="ldapFilterSecurityInterceptor"  class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="eSciDocLdapAuthenticationManager" />
        <property name="accessDecisionManager" ref="accessDecisionManager" />
        <property name="securityMetadataSource">
            <security:filter-invocation-definition-source path-type="regex">
                <security:intercept-url pattern="/aa/login/ldap$|/aa/login/ldap[^/].*$|/aa/ldap/j_spring_security_check|/aa/ldap/spring_security_check" access="IS_AUTHENTICATED_FULLY"/>
            </security:filter-invocation-definition-source>
        </property>
    </bean>

    <bean id="ldapLogoutFilter"  
        class="org.springframework.security.web.authentication.logout.LogoutFilter">  
        <constructor-arg value="/aa/login/ldap/login.html" />  
        <!-- URL redirected to after logout -->  
        <constructor-arg>  
            <list>                      
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />  
            </list>  
        </constructor-arg>  
    </bean>  

    <!-- END LDAP FILTER CHAIN #######################################################################################################-->
    <!-- SHIBBOLETH FILTER CHAIN #######################################################################################################-->
	<!-- 
	Filter-Chain for Shibboleth-Login.
	To disable, comment in filter-chain with filters=disabledAuthenticationProcessingFilter.
	To enable, comment out filter-chain with filters=disabledAuthenticationProcessingFilter and comment in the other one.
    Replace property serviceProviderBaseUrl in bean with id=shibbolethAuthenticationProcessingFilterEntryPoint with the url of your Shibboleth service provider
    If you use a Discovery-Service, set sessionInitiatorPath in bean with id=shibbolethAuthenticationProcessingFilterEntryPoint 
    to /Shibboleth.sso/DS, otherwise set it to /Shibboleth.sso/Login
	 -->
    <bean id="springSecurityShibbolethFilterChain"
        class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map path-type="regex">
        	<security:filter-chain filters="disabledAuthenticationProcessingFilter" pattern="/aa/login/shibboleth$|/aa/login/shibboleth[^/].*$|/aa/shibboleth/j_spring_security_check|/aa/shibboleth/spring_security_check"/>
            <!-- security:filter-chain pattern="/aa/login/shibboleth$|/aa/login/shibboleth[^/].*$|/aa/shibboleth/j_spring_security_check|/aa/shibboleth/spring_security_check" 
                       filters="httpSessionContextIntegrationFilter,
                                shibbolethAuthenticationProcessingFilter,
                                securityContextHolderAwareRequestFilter,
                                shibbolethExceptionTranslationFilter,
                                shibbolethFilterSecurityInterceptor" / -->
        </security:filter-chain-map>
    </bean>
    
    <bean id="shibbolethAuthenticationProcessingFilter" class="de.escidoc.core.aa.shibboleth.ShibbolethAuthenticationFilter"/>

    <bean id="eSciDocShibbolethAuthenticationManager"
        class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>
                <ref local="shibbolethAuthenticationProvider"/>
            </list>
        </property>
    </bean>
    
    <bean id="shibbolethAuthenticationProvider" class="de.escidoc.core.aa.shibboleth.ShibbolethAuthenticationProvider" />

    <bean id="shibbolethAuthenticationProcessingFilterEntryPoint" class="de.escidoc.core.aa.shibboleth.ShibbolethAuthenticationEntryPoint">
        <property name="serviceProviderBaseUrl" value="https://esfedrep5.fiz-karlsruhe.de:8545" />
        <property name="sessionInitiatorPath" value="/Shibboleth.sso/DS" />
    </bean>

    <bean id="shibbolethExceptionTranslationFilter"  
        class="org.springframework.security.web.access.ExceptionTranslationFilter">  
        <property name="authenticationEntryPoint" ref="shibbolethAuthenticationProcessingFilterEntryPoint" />  
        <property name="accessDeniedHandler">  
            <bean  
                class="org.springframework.security.web.access.AccessDeniedHandlerImpl">  
                <property name="errorPage" value="/aa/login/shibboleth" />  
            </bean>  
        </property>  
    </bean>  

    <bean id="shibbolethFilterSecurityInterceptor"  class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="eSciDocShibbolethAuthenticationManager" />
        <property name="accessDecisionManager" ref="accessDecisionManager" />
        <property name="securityMetadataSource">
            <security:filter-invocation-definition-source path-type="regex">
                <security:intercept-url pattern="/aa/login/shibboleth$|/aa/login/shibboleth[^/].*$|/aa/shibboleth/j_spring_security_check|/aa/shibboleth/spring_security_check" access="IS_AUTHENTICATED_FULLY"/>
            </security:filter-invocation-definition-source>
        </property>
    </bean>

    <!-- END SHIBBOLETH FILTER CHAIN #######################################################################################################-->
    <!-- OPENID FILTER CHAIN #######################################################################################################-->
	<!-- 
	Filter-Chain for OpenID-Login.
	To disable, comment in filter-chain with filters=disabledAuthenticationProcessingFilter.
	To enable, comment out filter-chain with filters=disabledAuthenticationProcessingFilter and comment in the other one.
    Set openidProviderRegex in bean with id=openidAuthenticationProcessingFilter to restrict allowed openId-Providers
    Set List of OpenID-Attributes in bean with id=myOpenID4JavaConsumer to set supported OpenID-Attributes.
	 -->

    <bean id="openidInitializer" class="de.escidoc.core.aa.openid.EscidocOpenidInitializer" lazy-init="false"/>

    <bean id="springSecurityOpenidFilterChain"
        class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map path-type="regex">
        	<security:filter-chain filters="disabledAuthenticationProcessingFilter" pattern="/aa/login/openid$|/aa/login/openid[^/].*$|/aa/openid/j_spring_openid_security_check|/aa/openid/spring_openid_security_check"/>
            <!-- security:filter-chain pattern="/aa/login/openid$|/aa/login/openid[^/].*$|/aa/openid/j_spring_openid_security_check|/aa/openid/spring_openid_security_check" 
                       filters="httpSessionContextIntegrationFilter,
                                openidLogoutFilter,
                                openidAuthenticationProcessingFilter,
                                securityContextHolderAwareRequestFilter,
                                openidExceptionTranslationFilter,
                                openidFilterSecurityInterceptor" / -->
        </security:filter-chain-map>
    </bean>
    
	<bean id="openidUserDetailsService" class="de.escidoc.core.aa.openid.EscidocOpenidUserDetailsService" />    

	<bean id="openidAuthenticationProcessingFilter" class="de.escidoc.core.aa.openid.EscidocOpenidFilter">
    	<property name="authenticationManager" ref="openIDAuthenticationManager"/>
		<property name="consumer" ref="myOpenID4JavaConsumer" />
		<property name="openidProviderRegex" value=".*" />
		<property name="providerRegexFailureUrl" value="/aa/login/openid/openidlogin.jsp?login_error=true" />
	</bean>

 	<bean id="openIDAuthenticationProvider" class="org.springframework.security.openid.OpenIDAuthenticationProvider">
  		<property name="userDetailsService" ref="openidUserDetailsService" />
 	</bean>

    <bean id="openidAuthenticationProcessingFilterEntryPoint" 
            class="de.escidoc.core.aa.springsecurity.EscidocAuthenticationProcessingFilterEntryPoint">
      <property name="loginFormUrl" value="/aa/login/openid/openidlogin.jsp"/>
    </bean>
    
	 <bean id="myOpenID4JavaConsumer" class="org.springframework.security.openid.OpenID4JavaConsumer">
	  <constructor-arg index="0">
	  	<bean class="org.openid4java.consumer.ConsumerManager"/>
	  </constructor-arg>
	  <constructor-arg index="1">
	   <list value-type="org.springframework.security.openid.OpenIDAttribute">
	    <bean class="org.springframework.security.openid.OpenIDAttribute">
	     <constructor-arg index="0" value="email"/>
	     <constructor-arg index="1" value="http://axschema.org/contact/email"/>
	     <property name="required" value="true"/>
	     <property name="count" value="1"/>
	    </bean>
	    <bean class="org.springframework.security.openid.OpenIDAttribute">
	     <constructor-arg index="0" value="fullname"/>
	     <constructor-arg index="1" value="http://axschema.org/namePerson"/>
	     <property name="required" value="true"/>
	     <property name="count" value="1"/>
	    </bean>
	   </list>
	  </constructor-arg>
	 </bean>
	  
	<security:authentication-manager alias="openIDAuthenticationManager">
    	<security:authentication-provider ref="openIDAuthenticationProvider"/>
	</security:authentication-manager>

    <bean id="openidFilterSecurityInterceptor"  class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="openIDAuthenticationManager" />
        <property name="accessDecisionManager" ref="accessDecisionManager" />
        <property name="securityMetadataSource">
            <security:filter-invocation-definition-source path-type="regex">
                <security:intercept-url pattern="/aa/login/openid$|/aa/login/openid[^/].*$|/aa/openid/j_spring_openid_security_check|/aa/openid/spring_openid_security_check" access="IS_AUTHENTICATED_FULLY"/>
            </security:filter-invocation-definition-source>
        </property>
    </bean>

    <bean id="openidExceptionTranslationFilter"  
        class="org.springframework.security.web.access.ExceptionTranslationFilter">  
        <property name="authenticationEntryPoint" ref="openidAuthenticationProcessingFilterEntryPoint" />  
        <property name="accessDeniedHandler">  
            <bean  
                class="org.springframework.security.web.access.AccessDeniedHandlerImpl">  
                <property name="errorPage" value="/aa/login/openid/openidlogin.jsp?login_error=true" />  
            </bean>  
        </property>  
    </bean>  

    <bean id="openidLogoutFilter"  
        class="org.springframework.security.web.authentication.logout.LogoutFilter">  
        <!-- URL redirected to after logout -->  
        <constructor-arg value="/aa/login/openid/openidlogin.jsp" />  
        <constructor-arg>  
            <list>                      
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />  
            </list>  
        </constructor-arg>  
    </bean>  

    <!-- END OPENID FILTER CHAIN #######################################################################################################-->


    <!-- ACCESS DECISION MANAGER ######################################################################################################-->
    <bean id="accessDecisionManager"  class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <bean class="org.springframework.security.access.vote.RoleVoter"/>
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </list>
        </property>
    </bean>
    <!-- END ACCESS DECISION MANAGER ######################################################################################################-->

    <!-- ##FILTERS AND ENTRY POINTS####################################################################################################-->
    <bean id="httpSessionContextIntegrationFilter" class="org.springframework.security.web.context.HttpSessionContextIntegrationFilter" />  

    <bean id="securityContextHolderAwareRequestFilter" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter" />  

    <bean id="disabledAuthenticationProcessingFilter" class="de.escidoc.core.aa.springsecurity.DisabledAuthenticationFilter"/>

    <!-- ##END FILTERS ######################################################################################################################-->

</beans>